{"version":3,"sources":["./src/app/pages/episodes/episodes.page.html","./src/app/pages/episodes/episodes-routing.module.ts","./src/app/pages/episodes/episodes.module.ts","./src/app/pages/episodes/episodes.page.scss","./src/app/pages/episodes/episodes.page.ts","./src/app/services/api.service.ts"],"names":[],"mappings":"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","file":"episodes-episodes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Episodes</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let episode of episodes | async\\\" (click)=\\\"openDetails(episode)\\\">\\n\\t\\t\\t<ion-label>\\n\\t\\t\\t\\t<h2>{{ episode.title }}</h2>\\n\\t\\t\\t\\t<ion-card-subtitle style=\\\"float: left;\\\">\\n\\t\\t\\t\\t\\t<p>S{{ episode.season }}E{{ episode.episode }}</p>\\n\\t\\t\\t\\t</ion-card-subtitle>\\n\\t\\t\\t</ion-label>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EpisodesPage } from './episodes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodesPageRoutingModule } from './episodes-routing.module';\n\nimport { EpisodesPage } from './episodes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodesPageRoutingModule\n  ],\n  declarations: [EpisodesPage]\n})\nexport class EpisodesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGVzL2VwaXNvZGVzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n    selector: 'app-episodes',\n    templateUrl: './episodes.page.html',\n    styleUrls: ['./episodes.page.scss'],\n})\nexport class EpisodesPage implements OnInit {\n\n    episodes: Observable<any>;\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.episodes = this.api.getEpisodes();\n        this.episodes.subscribe(data => {\n        console.log('my data', data);\n        });\n    }\n\n    openDetails(episode) {\n        let episodeId = episode.episode_id;        \n        this.router.navigateByUrl(`/tabs/episodes/${episodeId}`);\n    }\n}","// Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/36 \n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    allQuotes: Array<any>;\n\n    constructor(private http: HttpClient) { }\n\n\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(limit: number, offset: number) {\n        return this.http.get(`https://breakingbadapi.com/api/characters?limit=${limit}&offset=${offset}`)\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`)\n    }\n\n    getQuotes() {\n        this.http.get(('https://breakingbadapi.com/api/quotes')).subscribe(data => {\n            this.allQuotes = data as Array<any>;\n        });\n        return this.http.get('https://breakingbadapi.com/api/quotes')\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`)\n    }\n\n    getQuoteSearch(author: string) {\n        let selectedQuotes: any[] = [];\n        for (let quote of this.allQuotes) {\n            if (quote.author.toLowerCase().includes(author.toLowerCase())) {\n                selectedQuotes.push(quote);\n            }\n        }\n        return of(selectedQuotes);\n    }\n\n    getDeathCount(name: String) {\n        return this.http.get(`https://breakingbadapi.com/api/death-count?name=${name}`)\n    }\n\n\n}"],"sourceRoot":"webpack:///"}