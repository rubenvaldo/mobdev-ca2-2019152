{"version":3,"sources":["./src/app/pages/characters/characters.page.html","./src/app/pages/characters/characters-routing.module.ts","./src/app/pages/characters/characters.module.ts","./src/app/pages/characters/characters.page.scss","./src/app/pages/characters/characters.page.ts","./src/app/services/api.service.ts"],"names":[],"mappings":"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","file":"characters-characters-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Characters</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t<ion-avatar slot=\\\"start\\\">\\n\\t\\t\\t\\t<img src=\\\"{{ character.img }}\\\">\\n            </ion-avatar>\\n\\t\\t\\t\\t<ion-label>\\n\\t\\t\\t\\t\\t<h2>{{ character.name }}</h2>\\n\\t\\t\\t\\t\\t<p>{{ character.status }}</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\t<ion-infinite-scroll threshold=\\\"20%\\\" id=\\\"infinite-scroll\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loading-spinner=\\\"bubbles\\\" loading-text=\\\"Loading more data...\\\">\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersPageRoutingModule\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","// Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/38 \n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n\n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n\n\n    characters = [];\n    limit = 15;\n    offset = 0;\n    maxCharacters = 63;\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.loadCharacters();\n    }\n\n    openDetails(character) {\n        let characterID = character.char_id;\n        this.router.navigateByUrl(`/tabs/characters/${characterID}`);\n    }\n\n    loadCharacters(event?) {\n\n        this.api.getCharacters(this.limit, this.offset)\n            .subscribe(res => {\n                this.characters = this.characters.concat(res);\n                if (event) {\n                    event.target.complete();\n                }\n            })\n    }   \n\n    loadMore(event?) {\n        this.offset += 15;\n        this.loadCharacters(event);\n        if (this.offset > this.maxCharacters - 1) {\n            event.target.disable = true;\n        }\n    }\n\n}","// Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/36 \n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    allQuotes: Array<any>;\n\n    constructor(private http: HttpClient) { }\n\n\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(limit: number, offset: number) {\n        return this.http.get(`https://breakingbadapi.com/api/characters?limit=${limit}&offset=${offset}`)\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`)\n    }\n\n    getQuotes() {\n        this.http.get(('https://breakingbadapi.com/api/quotes')).subscribe(data => {\n            this.allQuotes = data as Array<any>;\n        });\n        return this.http.get('https://breakingbadapi.com/api/quotes')\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`)\n    }\n\n    getQuoteSearch(author: string) {\n        let selectedQuotes: any[] = [];\n        for (let quote of this.allQuotes) {\n            if (quote.author.toLowerCase().includes(author.toLowerCase())) {\n                selectedQuotes.push(quote);\n            }\n        }\n        return of(selectedQuotes);\n    }\n\n    getDeathCount(name: String) {\n        return this.http.get(`https://breakingbadapi.com/api/death-count?name=${name}`)\n    }\n\n\n}"],"sourceRoot":"webpack:///"}