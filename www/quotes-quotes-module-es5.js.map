{"version":3,"sources":["src/app/pages/quotes/quotes.page.html","src/app/pages/quotes/quotes-routing.module.ts","src/app/pages/quotes/quotes.module.ts","src/app/pages/quotes/quotes.page.scss","src/app/pages/quotes/quotes.page.ts","src/app/services/api.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Quotes</ion-title>\\n\\t</ion-toolbar>\\n    <ion-toolbar>\\n     <ion-searchbar [(ngModel)]=\\\"author\\\" (ionChange)=\\\"search($event)\\\" placeholder=\\\"Search by Author\\\"></ion-searchbar>\\n     </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t\\n            <ion-label>\\n<h2>\\\"{{ quote.quote }}\\\"</h2>\\n            <ion-card-subtitle style=\\\"padding: 10px 5px 5px 0px\\\"  >{{ quote.author }}</ion-card-subtitle>\\n</ion-label>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","// Final Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/38 \n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    quotes: Observable<any>;\n    author: string = '';\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => { console.log('my data', data); });\n    }\n    openDetails(quote) {\n        let quoteID = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quoteID}`);\n    }\n\n    search() {\n        this.quotes = this.api.getQuoteSearch(this.author);\n    }\n}","// Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/36 \n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    allQuotes: Array<any>;\n\n    constructor(private http: HttpClient) { }\n\n\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(limit: number, offset: number) {\n        return this.http.get(`https://breakingbadapi.com/api/characters?limit=${limit}&offset=${offset}`)\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`)\n    }\n\n    getQuotes() {\n        this.http.get(('https://breakingbadapi.com/api/quotes')).subscribe(data => {\n            this.allQuotes = data as Array<any>;\n        });\n        return this.http.get('https://breakingbadapi.com/api/quotes')\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`)\n    }\n\n    getQuoteSearch(author: string) {\n        let selectedQuotes: any[] = [];\n        for (let quote of this.allQuotes) {\n            if (quote.author.toLowerCase().includes(author.toLowerCase())) {\n                selectedQuotes.push(quote);\n            }\n        }\n        return of(selectedQuotes);\n    }\n\n    getDeathCount(name: String) {\n        return this.http.get(`https://breakingbadapi.com/api/death-count?name=${name}`)\n    }\n\n\n}"],"sourceRoot":"webpack:///","file":"quotes-quotes-module-es5.js"}