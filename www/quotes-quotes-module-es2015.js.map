{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts","./src/app/services/api.service.ts"],"names":[],"mappings":"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","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Quotes</ion-title>\\n\\t</ion-toolbar>\\n    <ion-toolbar>\\n     <ion-searchbar [(ngModel)]=\\\"author\\\" (ionChange)=\\\"search($event)\\\" placeholder=\\\"Search by Author\\\"></ion-searchbar>\\n     </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t\\n            <ion-label>\\n<h2>\\\"{{ quote.quote }}\\\"</h2>\\n            <ion-card-subtitle style=\\\"padding: 10px 5px 5px 0px\\\"  >{{ quote.author }}</ion-card-subtitle>\\n</ion-label>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","// Final Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/38 \n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    quotes: Observable<any>;\n    author: string = '';\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => { console.log('my data', data); });\n    }\n    openDetails(quote) {\n        let quoteID = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quoteID}`);\n    }\n\n    search() {\n        this.quotes = this.api.getQuoteSearch(this.author);\n    }\n}","// Reference from : https://mikhail-cct.github.io/mobdev/wk4/#/36 \n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    allQuotes: Array<any>;\n\n    constructor(private http: HttpClient) { }\n\n\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(limit: number, offset: number) {\n        return this.http.get(`https://breakingbadapi.com/api/characters?limit=${limit}&offset=${offset}`)\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`)\n    }\n\n    getQuotes() {\n        this.http.get(('https://breakingbadapi.com/api/quotes')).subscribe(data => {\n            this.allQuotes = data as Array<any>;\n        });\n        return this.http.get('https://breakingbadapi.com/api/quotes')\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`)\n    }\n\n    getQuoteSearch(author: string) {\n        let selectedQuotes: any[] = [];\n        for (let quote of this.allQuotes) {\n            if (quote.author.toLowerCase().includes(author.toLowerCase())) {\n                selectedQuotes.push(quote);\n            }\n        }\n        return of(selectedQuotes);\n    }\n\n    getDeathCount(name: String) {\n        return this.http.get(`https://breakingbadapi.com/api/death-count?name=${name}`)\n    }\n\n\n}"],"sourceRoot":"webpack:///"}